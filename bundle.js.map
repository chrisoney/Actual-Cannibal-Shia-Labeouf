{"version":3,"sources":["webpack:///webpack/bootstrap 572ace91dd3b5f311291","webpack:///./js/main.js","webpack:///./js/game_view.js","webpack:///./js/map.js","webpack:///./js/player.js","webpack:///./js/shia.js","webpack:///./js/camera.js","webpack:///./js/tile_maps.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,qDAAoD,MAAM;AAC1D;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,+CAA8C,MAAM;AACpD;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;AC7EA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAqD,SAAS;;AAE9D;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,2BAA0B;AAC1B,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAqD,SAAS;AAC9D;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;AC/FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,eAAe;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0DAAyD;;AAEzD;AACA;AACA;AACA,8DAA6D,UAAU;AACvE,gCAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,qCAAqC;AACxD,sBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,UAAU;AAC7B;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA0B,aAAa;AACvC,+BAA8B,aAAa;AAC3C;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sB;;;;;;AC5PA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB;;;AAGnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;;AAEA,gBAAe;;AAEf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL,2BAA0B,cAAc;AACxC;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,M;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA,6BAA4B,OAAO;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,uFAAsF,WAAW;AACjG,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,MAAK;AACL;AACA;AACA,8CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,MAAK;AACL;AACA;AACA;AACA,8CAA6C;AAC7C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yB;;;;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yB;;;;;;;ACzCA;AACA;AACA,YAAW,EAAE;AACb;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 572ace91dd3b5f311291","const GameView = require(\"./game_view.js\");\n\n// Initialize canvas and display splash\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  document.addEventListener(\"keydown\", tutorial);\n  playPause();\n});\n\nlet level = 1;\n\nfunction playPause(){\n  document.addEventListener(\"keydown\", (e) => {\n    let audio = document.getElementById(\"audio\");\n    if (e.key === 'm') {\n      if (audio.paused){\n        audio.play();\n      } else {\n        audio.pause();\n      }\n    }\n  });\n}\n\nfunction tutorial(){\n  document.getElementById(\"audio\").play();\n  const tipScreen = document.getElementById('tip-screen');\n  tipScreen.style.visibility = \"visible\";\n  setTimeout( () => {\n    document.addEventListener(\"keydown\", run)\n  }, 500);\n  document.removeEventListener(\"keydown\", tutorial);\n}\n\nfunction next(){\n  const nextScreen = document.getElementById('next-screen');\n  const levelMsg = document.getElementById('level-message');\n  levelMsg.innerHTML = `You escaped Shia on Level ${level}!`;\n  level += 1;\n  nextScreen.style.visibility = \"visible\";\n  setTimeout( () => {\n    document.addEventListener(\"keydown\", run)\n  }, 500);\n}\n\nfunction win(){\n  const winScreen = document.getElementById('win-screen');\n  winScreen.style.visibility = \"visible\";\n  level = 1;\n  setTimeout( () => {\n    document.addEventListener(\"keydown\", run)\n  }, 500);\n}\n\nfunction lose(){\n  let loseMsg = document.getElementById(\"lose-level\");\n  loseMsg.innerHTML = `You made it to level ${level}, but then you`;\n  const loseScreen = document.getElementById('lose-screen');\n  loseScreen.style.visibility = \"visible\";\n  level = 1;\n  setTimeout( () => {\n    document.addEventListener(\"keydown\", run)\n  }, 500);\n}\n\nfunction run() {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = 512;\n  canvas.height = 512;\n\n  const game_screens = document.querySelectorAll('.screen');\n  for (let screen of game_screens) {\n    screen.style.visibility = \"hidden\";\n  }\n\n  window.GameView = new GameView(canvas,level, win, lose, next);\n  window.GameView.start();\n  document.removeEventListener(\"keydown\", run);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 0\n// module chunks = 0","const Map = require('./map');\nconst TileMaps = require('./tile_maps')\n\n\nclass GameView {\n  constructor(canvas, level, win, lose, next){\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.map = new Map(canvas, level);\n    this.player = this.map.player;\n    this.camera = this.map.camera;\n    this.playing = true;\n    this.winCB = win;\n    this.loseCB = lose;\n    this.nextCB = next;\n    this.level = level;\n    this.tips = ['If you have \"meat\" and Shia appears, you can distract him by pressing the E button',\n                 'You need your keys before you can escape the level in your car',\n                 'Finding medicine will heal you, but only if you\\'re already injured',\n                 'If Shia has already surprised you from a log, he\\'s probably still watching it',\n                 'You can mute and unmute the music with the M key',\n                 'The spacebar can be used for both searching logs and starting your car',\n                 'Shia gets faster every level so work on those reflexes!',\n                ]\n\n    this.tip = this.tips[Math.floor(Math.random() * this.tips.length)];\n    document.getElementById(\"tips\").innerHTML = `< ${this.tip} >`;\n\n    window.setInterval(() => {\n      this.player.surprise_text.src = './images/empty.png'\n    }, 2000);\n\n    this.bindKeyHandlers = this.bindKeyHandlers.bind(this);\n  }\n\n  bindKeyHandlers() {\n    window.addEventListener(\"keydown\", (e) => {\n      this.player.key_presses[e.key] = true;\n    });\n\n    window.addEventListener(\"keyup\", (e) => {\n      this.player.key_presses[e.key] = false;\n    });\n\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key === ' ') {\n        this.player.search();\n        this.tipScroll();\n      }\n    });\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key === 'e') {this.player.tossLimb()}\n    });\n  }\n\n  escaped(){\n    return this.player.escaped();\n  }\n\n  eaten(){\n    return this.player.eaten();\n  }\n\n  start(){\n    this.bindKeyHandlers();\n    requestAnimationFrame(this.step.bind(this));\n  }\n\n  tipScroll(){\n    this.tip = this.tips[Math.floor(Math.random() * this.tips.length)];\n    document.getElementById(\"tips\").innerHTML = `< ${this.tip} >`;\n  }\n\n  step () {\n\n    this.map.draw(this.ctx);\n    this.camera.update();\n\n    if (this.escaped()){\n      if (this.level <= 9){\n        this.nextCB();\n        this.player.has_key = false;\n      }\n      else {\n        this.winCB();\n      }\n    } \n    else if (this.eaten()){\n      this.loseCB();\n    }\n    else {\n      requestAnimationFrame(this.step.bind(this));\n    }\n  }\n}\nmodule.exports = GameView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/game_view.js\n// module id = 1\n// module chunks = 0","const Player = require('./player');\nconst Camera = require('./camera')\nconst TileMaps = require('./tile_maps')\n\nclass Map {\n  constructor(canvas, level){\n    this.level = level;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.tiles = new Image();\n    this.tiles.src = './images/sprite-background.png';\n\n    this.generateLevels(1);\n    this.generateLevels(2);\n    this.generateLevels(3);\n    this.generateLevels(4);\n    this.generateLevels(5);\n    this.generateLevels(6);\n    this.generateLevels(7);\n    this.generateLevels(8);\n    this.generateLevels(9);\n    this.generateLevels(10);\n\n    this.camera = new Camera(level, TileMaps, 512, 512);\n    this.player = new Player(level, TileMaps, 100, 100, this.ctx);\n    this.camera.follow(this.player);\n  }\n  generateObstacles(level){\n    let size = 9 + (level * 3);\n\n    let obstacles = [];\n    \n    // create logs\n    for (let x = 0; x < 4 + level; x++){\n      obstacles.push(3);\n    }\n    \n    // populate layer with obstacles\n\n    while(obstacles.length > 0){\n      let x = Math.floor(Math.random() * (size - 2) + 1);\n      let y = Math.floor(Math.random() * (size - 2) + 1);\n      if (TileMaps.levels[level].layers[1][x][y] !== 0) {continue;}\n\n      if (TileMaps.levels[level].layers[1][x + 1][y] !== 0 &&\n          TileMaps.levels[level].layers[1][x - 1][y] !== 0 &&\n          TileMaps.levels[level].layers[1][x][y + 1] !== 0 &&\n          TileMaps.levels[level].layers[1][x][y - 1] !== 0) { continue; }\n      if (x === 1 && y === 1) { continue;}\n      TileMaps.levels[level].layers[1][x][y] = obstacles.shift();\n    }\n\n    //place car\n    let car = [10,11];\n    while(car.length > 0){\n      let x = Math.floor(Math.random() * (size - 2) + 1);\n      let y = Math.floor(Math.random() * (size - 2) + 1);\n      if (TileMaps.levels[level].layers[1][x][y] === 0 && TileMaps.levels[level].layers[1][x][y + 1] === 0){\n        TileMaps.levels[level].layers[1][x][y] = car.shift();\n        TileMaps.levels[level].layers[1][x][y + 1] = car.shift();\n      }\n    }\n  }\n\n  addTrees(level) {\n    let dimensions = 9 + (level * 3) - 2;\n    let maxTunnels = dimensions * 3;\n    let maxLength = dimensions - 2;\n    let map = [];\n    for (var i = 0; i < dimensions; i++){\n      let row = [];\n      for (var x = 0; x < dimensions; x++){\n        row.push(5);\n      }\n      map.push(row);\n    }\n    let currentRow = 0;\n    let currentColumn = 0;\n    let directions = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    let lastDirection = [];\n    let randomDirection;\n    while (maxTunnels && dimensions && maxLength) {\n\n\n      do {\n         randomDirection = directions[Math.floor(Math.random() * directions.length)];\n      } while ((randomDirection[0] === -lastDirection[0] && randomDirection[1] === -lastDirection[1]) || (randomDirection[0] === lastDirection[0] && randomDirection[1] === lastDirection[1]));\n\n      var randomLength = Math.ceil(Math.random() * maxLength),\n        tunnelLength = 0;\n\n      while (tunnelLength < randomLength) {\n        if (((currentRow === 0) && (randomDirection[0] === -1)) ||\n            ((currentColumn === 0) && (randomDirection[1] === -1)) ||\n            ((currentRow === dimensions - 1) && (randomDirection[0] === 1)) ||\n            ((currentColumn === dimensions - 1) && (randomDirection[1] === 1))) {\n          break;\n        } else {\n          map[currentRow][currentColumn] = 0;\n          currentRow += randomDirection[0];\n          currentColumn += randomDirection[1];\n          tunnelLength++;\n        }\n      }\n\n      if (tunnelLength) {\n        lastDirection = randomDirection;\n        maxTunnels--;\n      }\n    }\n    return map;\n  };\n\n\n  generateItemsAndShias(level){\n    let hidden = [];\n    let total = 4 + level;\n    hidden.push(1);\n    let medicine = Math.floor(Math.random() * 2);\n    if (medicine === 1){\n      hidden.push(3);\n    }\n    let bait = Math.floor(Math.random() * 2);\n    if (bait === 1){\n      hidden.push(4);\n    }\n    while (hidden.length < total) {\n      hidden.push(2);\n    }\n\n    // shuffle the items and shias\n    for(let i = hidden.length - 1; i > 0; i--){\n      const j = Math.floor(Math.random() * i)\n      const temp = hidden[i]\n      hidden[i] = hidden[j]\n      hidden[j] = temp\n    }\n\n    for (let i = 1; i < TileMaps.levels[level].rows - 1; i++){\n      for (let j = 1; j < TileMaps.levels[level].rows - 1; j++){\n        if (TileMaps.levels[level].layers[1][i][j] === 3){\n          TileMaps.levels[level].layers[2][i][j] = hidden.shift();\n        }\n      }\n    }\n  }\n\n  generateLevels(level){\n    TileMaps.levels[level] = {layers: [[],[],[]]};\n    let size = 9 + (level * 3);\n    TileMaps.levels[level].cols = size;\n    TileMaps.levels[level].rows = size;\n    let firstLayer = [];\n    for (let i = 0; i < size; i++){\n      let row = [];\n      for (let j = 0; j < size; j++){\n        row.push(9);\n      }\n      firstLayer.push(row);\n    }\n    TileMaps.levels[level].layers[0] = firstLayer;\n\n    let secondLayer = [];\n    let innerMap = this.addTrees(level);\n    secondLayer.push(new Array(size).fill(5));\n    for (let k = 1; k < size - 1; k++){\n      let row = [5];\n      row = row.concat(innerMap.shift());\n      row.push(5);\n      secondLayer.push(row);\n    }\n    secondLayer.push(new Array(size).fill(5));\n    TileMaps.levels[level].layers[1] = secondLayer;\n\n    let thirdLayer = [];\n    for (let i = 0; i < size; i++){\n      let row = [];\n      for (let j = 0; j < size; j++){\n        row.push(0);\n      }\n      thirdLayer.push(row);\n    }\n    TileMaps.levels[level].layers[2] = thirdLayer;\n    this.generateObstacles(level);\n    this.generateItemsAndShias(level);\n  }\n\n\n  drawLayer(layer) {\n    var startCol = Math.floor(this.camera.x / TileMaps.tsize);\n    var endCol = startCol + (this.camera.width / TileMaps.tsize);\n    var startRow = Math.floor(this.camera.y / TileMaps.tsize);\n    var endRow = startRow + (this.camera.height / TileMaps.tsize);\n    var offsetX = -this.camera.x + startCol * TileMaps.tsize;\n    var offsetY = -this.camera.y + startRow * TileMaps.tsize;\n\n    for (var c = startCol; c <= endCol; c++) {\n        for (var r = startRow; r <= endRow; r++) {\n            var tile = TileMaps.getTile(this.level,layer, c, r);\n            var x = (c - startCol) * TileMaps.tsize + offsetX;\n            var y = (r - startRow) * TileMaps.tsize + offsetY;\n            if (tile !== 0) { // empty\n                this.ctx.drawImage(\n                    this.tiles,\n                    (tile - 1) * TileMaps.tsize,\n                    0,\n                    TileMaps.tsize,\n                    TileMaps.tsize,\n                    Math.round(x),\n                    Math.round(y),\n                    TileMaps.tsize,\n                    TileMaps.tsize\n                );\n            }\n        }\n    }\n  }\n\n  drawGrid() {\n    var width = TileMaps.levels[this.level].cols * TileMaps.tsize;\n    var height = TileMaps.levels[this.level].rows * TileMaps.tsize;\n    var x, y;\n    for (var r = 0; r < TileMaps.levels[this.level].rows; r++) {\n        x = - this.camera.x;\n        y = r * TileMaps.tsize - this.camera.y;\n        this.ctx.beginPath();\n        this.ctx.moveTo(x, y);\n        this.ctx.lineTo(width, y);\n        this.ctx.stroke();\n    }\n    for (var c = 0; c < TileMaps.levels[this.level].cols; c++) {\n        x = c * TileMaps.tsize - this.camera.x;\n        y = - this.camera.y;\n        this.ctx.beginPath();\n        this.ctx.moveTo(x, y);\n        this.ctx.lineTo(x, height);\n        this.ctx.strokeStyle = '#017320';\n        // 528a26 lighter background\n        // 017320 darker background\n        this.ctx.stroke();\n    }\n  }\n\n  draw(ctx){\n    this.drawLayer(0);\n    this.drawGrid();\n    this.drawLayer(1);\n    this.player.gameLoop();\n  }\n\n}\n\nmodule.exports = Map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/map.js\n// module id = 2\n// module chunks = 0","// const Position = require('./position.js');\nconst Shia = require('./shia')\n\nclass Player {\n  constructor(level, map, x, y, ctx) {\n    this.level = level;\n    this.game_width = 512;\n    this.game_height = 512;\n    this.img = new Image();\n    this.img.src = \"./images/player-sprite-run.png\";\n    this.position = {\n      x: x,\n      y: y,\n    }\n    this.ctx = ctx;\n    this.cycle_loop = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    this.currentLoopIndex = 0;\n    this.frameCount = 0;\n    this.currentDirection = 0;\n    this.key_presses = {};\n\n    this.width = 18;\n    this.height = 32;\n\n    this.map = map;\n\n    this.has_key = false;\n    this.text_box = new Image();\n    this.text_box.src = '';\n\n    this.has_escaped = false;\n    this.has_been_eaten = false;\n\n    this.shia = false;\n    this.shia_surprise = false;\n\n    this.lives = 3;\n    this.limbs = 0;\n\n    this.surprise_text = new Image();\n    this.surprise_text.src = \"./images/empty.png\"\n  }\n\n  drawFrame(frameX, frameY, canvasX, canvasY) {\n    const SCALE = 1;\n    const WIDTH = 18;\n    const HEIGHT = 32;\n    const SCALED_WIDTH = SCALE * WIDTH;\n    const SCALED_HEIGHT = SCALE * HEIGHT;\n    this.ctx.drawImage(this.img, frameX * WIDTH, frameY * HEIGHT, WIDTH, HEIGHT, canvasX, canvasY, SCALED_WIDTH, SCALED_HEIGHT);\n  }\n\n  collide(dirX, dirY) {\n    let old_pos = {x: this.position.x, y: this.position.y};\n\n\n    old_pos.x += dirX;\n    var left = old_pos.x;\n    var right = old_pos.x + this.width;\n    var top = old_pos.y;\n    var bottom = old_pos.y + this.height;\n\n    // check for collisions on sprite sides\n    var collision =\n        this.map.isSolidXY(this.level, left, top) ||\n        this.map.isSolidXY(this.level, right, top) ||\n        this.map.isSolidXY(this.level, right, bottom) ||\n        this.map.isSolidXY(this.level, left, bottom);\n    if (!collision){\n      this.position = {x: old_pos.x, y: old_pos.y};\n    }\n\n    old_pos = {x: this.position.x, y: this.position.y};\n\n    old_pos.y += dirY;\n\n    var left = old_pos.x;\n    var right = old_pos.x + this.width;\n    var top = old_pos.y;\n    var bottom = old_pos.y + this.height;\n\n    collision = \n    this.map.isSolidXY(this.level, left, top) ||\n    this.map.isSolidXY(this.level, right, top) ||\n    this.map.isSolidXY(this.level, right, bottom) ||\n    this.map.isSolidXY(this.level, left, bottom);\n    if (!collision){\n      this.position = {x: old_pos.x, y: old_pos.y};\n    }\n  }\n\n  search(){\n    var left = this.position.x - this.width / 2;\n    var right = this.position.x + this.width / 2 - 1;\n    var top = this.position.y - this.height / 2;\n    var bottom = this.position.y + this.height / 2 - 1;\n\n    var search = [\n        this.map.isSearchable(this.level, left, top, this.has_key),\n        this.map.isSearchable(this.level, right, top, this.has_key),\n        this.map.isSearchable(this.level, right, bottom, this.has_key),\n        this.map.isSearchable(this.level, left, bottom, this.has_key)];\n    \n    if (search.includes('key')){\n      this.has_key = true;\n      this.text_box.src = \"./images/found_keys.png\";\n    } else if (search.includes('escaped')){\n      this.has_escaped = true;\n    } else if (search.includes('no keys')){\n      this.text_box.src = \"./images/no_keys.png\";\n    } else if (search.includes('surprise')){\n      this.shia = new Shia(this.level, this.map, this.screenX, this.screenY, this.ctx, this);\n      this.shia_surprise = true;\n      this.surprise_text.src = './images/shia_surprise.png'\n    } else if (search.includes('medicine')){\n      if (this.lives < 3){ this.lives++; }\n      this.text_box.src = \"./images/medicine.png\";\n    } else if (search.includes('limb')){\n      this.limbs++;\n      this.text_box.src = \"./images/limb.png\"\n    } else if (search.includes('nothing')){\n      this.text_box.src = \"./images/found_nothing.png\";\n    } \n    else {\n      this.text_box.src = \"\";\n    }\n  }\n\n  escaped(){\n    return this.has_escaped;\n  }\n\n  eaten(){\n    return this.has_been_eaten;\n  }\n\n  updateLives(){\n    if (this.lives === 0){\n      this.has_been_eaten = true;\n    }\n    let hearts = '';\n    for (let x = 0; x < this.lives; x++){\n      hearts += '<img src=\"./images/full_heart.png\" />';\n    }\n    for (let y = this.lives; y < 3; y++){\n      hearts += '<img src=\"./images/empty_heart.png\" />';\n    }\n    document.getElementById(\"hearts\").innerHTML = hearts;\n  }\n\n  tossLimb(){\n    if (this.shia_surprise && this.limbs > 0){\n      this.limbs-=1;\n      this.shia.currentDirection = (this.shia.currentDirection + 1) % 2;\n      this.shia.img.src = \"./images/shia-sprite-run-foot.png\";\n    }\n  }\n  \n  gameLoop() {\n    if (this.has_key){\n      document.getElementById(\"key\").innerHTML = '<img src=\"./images/key.png\" />x 1';\n    } else {\n      document.getElementById(\"key\").innerHTML = '';\n    }\n\n    if (this.limbs > 0){\n      document.getElementById(\"limb\").innerHTML = `<img src=\"./images/foot.png\" />x ${this.limbs}`\n    } else {\n      document.getElementById(\"limb\").innerHTML = '';\n    }\n\n    this.updateLives();\n\n    if (!this.shia_surprise){\n      this.shia = false;\n    } else {\n      this.shia.shiaGameLoop();\n    }\n\n    const FRAME_LIMIT = 10;\n    const FACING_RIGHT = 0;\n    const FACING_LEFT = 1;\n    let hasMoved = false;\n    const MOVEMENT_SPEED = 2;\n    if (this.key_presses.w || this.key_presses.ArrowUp) {\n      this.collide(0, -MOVEMENT_SPEED);\n      hasMoved = true;\n      if (this.shia && this.screenY === 256){this.shia.sY+=MOVEMENT_SPEED};\n    } else if (this.key_presses.s || this.key_presses.ArrowDown) {\n      this.collide(0, MOVEMENT_SPEED);\n      hasMoved = true;\n      if (this.shia && this.screenY === 256){this.shia.sY-=MOVEMENT_SPEED};\n    }\n\n    if (this.key_presses.a || this.key_presses.ArrowLeft) {\n      this.collide(-MOVEMENT_SPEED, 0)\n      this.currentDirection = FACING_LEFT;\n      hasMoved = true;\n      if (this.shia && this.screenX === 256){this.shia.sX+=MOVEMENT_SPEED};\n    } else if (this.key_presses.d || this.key_presses.ArrowRight) {\n      this.collide(MOVEMENT_SPEED, 0)\n      this.currentDirection = FACING_RIGHT;\n      hasMoved = true;\n      if (this.shia && this.screenX === 256){this.shia.sX-=MOVEMENT_SPEED};\n    }\n\n\n    if (hasMoved) {\n      this.frameCount++;\n      if (this.frameCount >= FRAME_LIMIT) {\n        this.frameCount = 0;\n        this.currentLoopIndex++;\n        if (this.currentLoopIndex >= this.cycle_loop.length) {\n          this.currentLoopIndex = 0;\n        }\n        this.text_box.src = \"./images/empty.png\";\n      }\n    }\n    this.drawFrame(\n      this.cycle_loop[this.currentLoopIndex],\n      this.currentDirection,\n      this.screenX - this.width/2,\n      this.screenY - this.height/2\n    );\n    this.ctx.drawImage(this.text_box, this.screenX, this.screenY - 70, 120, 60)\n    this.ctx.drawImage(this.surprise_text, this.screenX - 150, this.screenY - 120, 300, 100);\n  }\n\n}\n\nmodule.exports = Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/player.js\n// module id = 3\n// module chunks = 0","\nclass Shia {\n  constructor(level, map, pX, pY, ctx, player){\n    this.level = level;\n    this.map = map;\n    this.ctx = ctx;\n    this.player = player\n\n    this.game_width = 512;\n    this.game_height = 512;\n    this.img = new Image();\n    this.img.src = \"./images/shia-sprite-run.png\";\n\n    this.cycle_loop = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    this.currentLoopIndex = 0;\n    this.frameCount = 0;\n    this.currentDirection = Math.floor(Math.random() * 2);\n\n    this.mapMax = map.levels[level].cols * map.tsize;\n    if (this.currentDirection === 0){\n      this.sX = Math.max(pX - 560, 0);\n    } else {\n      this.sX = Math.min(pX + 512, this.mapMax - 5);\n    }\n    this.sY = pY;\n\n    this.width = 18;\n    this.height = 32;\n    \n    this.has_attacked = false;\n  }\n\n\n\n  drawFrame(frameX, frameY, canvasX, canvasY) {\n    const SCALE = 1;\n    const WIDTH = 18;\n    const HEIGHT = 32;\n    const SCALED_WIDTH = SCALE * WIDTH;\n    const SCALED_HEIGHT = SCALE * HEIGHT;\n    this.ctx.drawImage(this.img, frameX * WIDTH, frameY * HEIGHT, WIDTH, HEIGHT, canvasX, canvasY, SCALED_WIDTH, SCALED_HEIGHT);\n  }\n\n  shiaGameLoop(){\n    if (this.sX < 0 || this.sX > this.mapMax){\n      this.player.shia_surprise = false;\n    }\n\n    const FRAME_LIMIT = 10;\n    let hasMoved = false;\n    const MOVEMENT_SPEED = 2 + (0.5 * this.level);\n\n    if (this.currentDirection === 0){\n      this.sX = this.sX + MOVEMENT_SPEED;\n      hasMoved = true;\n    } else {\n      this.sX =this.sX - MOVEMENT_SPEED;\n      hasMoved = true;\n    }\n\n    if (hasMoved) {\n      this.frameCount++;\n      if (this.frameCount >= FRAME_LIMIT) {\n        this.frameCount = 0;\n        this.currentLoopIndex++;\n        if (this.currentLoopIndex >= this.cycle_loop.length) {\n          this.currentLoopIndex = 0;\n        }\n      }\n    }\n    this.drawFrame(\n      this.cycle_loop[this.currentLoopIndex],\n      this.currentDirection,\n      this.sX,\n      this.sY\n    );\n    if (!this.has_attacked &&this.sX < this.player.screenX + 10 &&\n        this.sX + 28 > this.player.screenX &&\n        this.sY < this.player.screenY + 20 &&\n        this.sY + 40 > this.player.screenY){\n          this.player.lives--;\n          this.has_attacked = true;\n    }\n\n  }\n}\n\nmodule.exports = Shia;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/shia.js\n// module id = 4\n// module chunks = 0","class Camera {\n  constructor(level, map, width, height){\n    this.x = 0;\n    this.y = 0;\n    this.width = width;\n    this.height = height;\n    this.maxX = map.levels[level].cols * map.tsize - width;\n    this.maxY = map.levels[level].rows * map.tsize - height;\n  }\n\n  follow(sprite) {\n    this.following = sprite;\n    sprite.screenX = 0;\n    sprite.screenY = 0;\n  }\n  update() {\n    // center sprite if possible\n    this.following.screenX = this.width / 2;\n    this.following.screenY = this.height / 2;\n\n    // camera follows sprite\n    this.x = this.following.position.x - this.width / 2;\n    this.y = this.following.position.y - this.height / 2;\n    // clamp the values\n    this.x = Math.max(0, Math.min(this.x, this.maxX));\n    this.y = Math.max(0, Math.min(this.y, this.maxY));\n\n    // change coordinates for corners\n\n    // left and right sides\n    if (this.following.position.x < this.width / 2 ||\n        this.following.position.x > this.maxX + this.width / 2) {\n        this.following.screenX = this.following.position.x - this.x;\n    }\n    // top and bottom\n    if (this.following.position.y < this.height / 2 ||\n        this.following.position.y > this.maxY + this.height / 2) {\n        this.following.screenY = this.following.position.y - this.y;\n    }\n  }\n}\n\nmodule.exports = Camera;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/camera.js\n// module id = 5\n// module chunks = 0","\nmodule.exports = {\n  tsize: 66,\n  levels: { },\n  getTile: function (level, layer, col, row) {\n    return this.levels[level].layers[layer][row][col];\n  },\n  isSolidXY: function (level, x, y) {\n      var col = Math.floor((x - 6) / this.tsize);\n      var row = Math.floor((y - 6) / this.tsize);\n      var tile = this.getTile(level, 1, col, row);\n      var isSolid = (![0,3,4,10,11].includes(tile));\n      if (tile === 3){\n        this.levels[level].layers[1][row][col] = 4;\n        window.setTimeout(()=>{\n          this.levels[level].layers[1][row][col] = 3;\n        },1500);\n      }\n      return isSolid;\n  },\n  isSearchable: function (level, x, y, has_key) {\n    var col = Math.floor(x / this.tsize);\n    var row = Math.floor(y / this.tsize);\n    var tile = this.getTile(level, 1, col, row);\n    var tile2 = this.getTile(level, 2, col, row);\n    if (tile === 3 || tile === 4){\n      if (tile2 === 1 && !has_key){\n        return 'key';\n      } else if (tile2 === 2){\n        return 'surprise';\n      } else if (tile2 === 3){\n        this.levels[level].layers[2][row][col] = 0;\n        return 'medicine';\n      } else if (tile2 === 4){\n        this.levels[level].layers[2][row][col] = 0;\n        return 'limb';\n      }\n      return 'nothing';\n    }\n    if (tile === 10 || tile === 11){\n      if (has_key){\n        return 'escaped';\n      } else {\n        return 'no keys';\n      }\n    }\n    return null;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/tile_maps.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}